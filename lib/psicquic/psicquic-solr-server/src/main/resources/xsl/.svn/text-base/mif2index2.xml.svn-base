<xsl:stylesheet version="1.0"
   xmlns:mif="http://psi.hupo.org/mi/mif"
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >

<!-- ======================================================================= -->
<!-- XSLT transformation  MIF 2.5.x to MITAB 2.5-like PSICQUIC index         -->
<!--   parameters:                                                           -->
<!--       file - file name                                                  -->
<!--       expand - expansion flag (true/false)                              -->
<!--                                                                         -->
<!--  NOTE: bait/prey (ie spoke) expansion only; retains interaction type.   -->
<!--        The latter should be modified to promote 'association'           -->
<!--        to 'physical association'.                                       -->                                   
<!-- ======================================================================= -->
<!--                                                                         -->
<!-- record/doc PID: <$file>:<entry#>:<int id>:<evid id>[:prt id:pt id]      -->
<!--                                                                         -->  
<!-- ======================================================================= -->

  <xsl:include href="mif2xpsq.xml"/>

  <!-- ===================================================================== -->
  <!-- build document/record                                                 -->
  <!-- ===================================================================== -->

  <xsl:template name="complex-record">

    <xsl:param name="src" />
    <xsl:param name="fep" />
    <xsl:param name="evd" />
    <xsl:param name="int" />
    <xsl:param name="aprt" />
    <xsl:param name="bprt" />

    <xsl:if test="$debug = 'true'">
     <xsl:text>&#xA;complex-record&#xA;</xsl:text>
    </xsl:if>

    <xsl:element name="doc">
      <xsl:element name="field">
        <xsl:attribute name="name">recId</xsl:attribute>
        <xsl:value-of select="concat($fep,':',$evd/@id,':cx')"/>
      </xsl:element>
    
      <!-- participants: both fidA and fidB -->

      <xsl:for-each select='$aprt|$bprt'>            

        <xsl:if test="count(./mif:interactor) = 1">
          <xsl:variable name="i9r" select="./mif:interactor"/>

           <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">A</xsl:with-param>
           </xsl:call-template>
         </xsl:if>

         <xsl:if test="count(./mif:interactorRef) = 1">
             <xsl:variable name="iid"
                  select="./mif:interactorRef/text()"/>
             <xsl:variable name="i9r"
                  select="//mif:interactorList/mif:interactor[@id=$iid]"/>

             <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">A</xsl:with-param>
             </xsl:call-template>
         </xsl:if>
           
         <xsl:if test="count(./mif:interactor) = 1">
          <xsl:variable name="i9r" select="./mif:interactor"/>

           <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">B</xsl:with-param>
           </xsl:call-template>
         </xsl:if>

         <xsl:if test="count(./mif:interactorRef) = 1">
             <xsl:variable name="iid"
                  select="./mif:interactorRef/text()"/>
             <xsl:variable name="i9r"
                  select="//mif:interactorList/mif:interactor[@id=$iid]"/>

             <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">B</xsl:with-param>
             </xsl:call-template>
         </xsl:if>
      </xsl:for-each>     
   
           <!-- pubauth -->

           <!-- pubid -->

           <xsl:apply-templates mode="pubid" 
                select="$evd/mif:bibref/mif:xref/*">
             <xsl:with-param name="fid">pubid</xsl:with-param>
           </xsl:apply-templates>
           
           <!-- type --> 
           
          <xsl:apply-templates mode="cvterm" 
               select="$int/mif:interactionType">
            <xsl:with-param name="fid">type</xsl:with-param>
          </xsl:apply-templates>

          <!-- detmethod --> 

          <xsl:apply-templates mode="cvterm"
               select="$evd/mif:interactionDetectionMethod">
            <xsl:with-param name="fid">detmethod</xsl:with-param>
          </xsl:apply-templates>

          <!-- interaction_id -->

          <xsl:apply-templates mode="intid" select="$int[@imexId != '']"/>

    </xsl:element>    
  </xsl:template>

  <xsl:template name="record">
    <xsl:param name="fep" />
    <xsl:param name="evd" />
    <xsl:param name="int" />
    <xsl:param name="aprt" />
    <xsl:param name="bprt" />
    <xsl:param name="epid">false</xsl:param>

    <xsl:for-each select='$aprt'>
      <xsl:variable name="a" select='.'/>
        <xsl:for-each select='$bprt'>
          <xsl:variable name="b" select='.'/>

        <xsl:if test="$debug = 'true'">         
         <xsl:text>a::b= </xsl:text><xsl:value-of select='$a/@id'/>
             <xsl:text>::</xsl:text><xsl:value-of select='$b/@id'/>
         <xsl:text>&#xA;</xsl:text>
        </xsl:if>

         <xsl:element name="doc">
           <xsl:element name="field">
             <xsl:attribute name="name">pid</xsl:attribute>
             <xsl:if test="$epid = 'false'">
              <xsl:value-of select="concat($fep,':',$evd/@id)"/>
             </xsl:if>
             <xsl:if test="$epid = 'true'">
              <xsl:value-of select="concat($fep,':',$evd/@id,
                                           ':',$a/@id,':',$b/@id)" />
             </xsl:if>
           </xsl:element> 

           <!-- first participant -->

           <xsl:if test="count($a/mif:interactor) = 1">
             <xsl:variable name="i9r" select="$a/mif:interactor"/>

             <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">A</xsl:with-param>
             </xsl:call-template>
           </xsl:if>

           <xsl:if test="count($a/mif:interactorRef) = 1">
             <xsl:variable name="iid"
                  select="$a/mif:interactorRef/text()"/>                 
             <xsl:variable name="i9r"
                  select="//mif:interactorList/mif:interactor[@id=$iid]"/>

             <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">A</xsl:with-param>
             </xsl:call-template>
           </xsl:if>
           
           <!-- second participant -->
           
           <xsl:if test="count($b/mif:interactor) = 1">
             <xsl:variable name="i9r" select="$b/mif:interactor"/>
             
             <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">B</xsl:with-param>
             </xsl:call-template>
           </xsl:if>
           
           <xsl:if test="count($b/mif:interactorRef) = 1">
             <xsl:variable name="iid"
                  select="$b/mif:interactorRef/text()"/>                 
             <xsl:variable name="i9r"
                  select="//mif:interactorList/mif:interactor[@id=$iid]"/>
             
             <xsl:call-template name="interactor">
               <xsl:with-param name="i9r" select="$i9r"/>
               <xsl:with-param name="fid">B</xsl:with-param>
             </xsl:call-template>
           </xsl:if>

           <!-- pubauth -->

           <!-- pubid -->

           <xsl:apply-templates mode="pubid" 
                select="$evd/mif:bibref/mif:xref/*">
             <xsl:with-param name="fid">pubid</xsl:with-param>
           </xsl:apply-templates>
           
           <!-- type --> 
           
          <xsl:apply-templates mode="cvterm" 
               select="$int/mif:interactionType">
            <xsl:with-param name="fid">type</xsl:with-param>
          </xsl:apply-templates>

          <!-- detmethod --> 

          <xsl:apply-templates mode="cvterm"
               select="$evd/mif:interactionDetectionMethod">
            <xsl:with-param name="fid">detmethod</xsl:with-param>
          </xsl:apply-templates>

          <!-- interaction_id -->

          <xsl:apply-templates mode="intid" select="$int[@imexId != '']"/>
       
        </xsl:element>
        <xsl:text>&#xA;</xsl:text>
      </xsl:for-each>
    </xsl:for-each>
  </xsl:template>
  
<!-- ======================================================================= -->
<!-- interactor/participant fields                                           -->
<!-- ======================================================================= -->
  
  <xsl:template  name="interactor">
     <xsl:param name="i9r" />
     <xsl:param name="fid" />
 
     <!-- id<n>/id -->

     <xsl:apply-templates mode="xref" 
          select="$i9r/mif:xref/mif:primaryRef">
        <xsl:with-param name="fid" select="concat('id',$fid)"/>
     </xsl:apply-templates>

     <xsl:apply-templates mode="xref" 
          select="$i9r/mif:xref/mif:secondaryRef[@refType='identity']">
        <xsl:with-param name="fid">id</xsl:with-param>
     </xsl:apply-templates>
     <xsl:apply-templates mode="xref" 
          select="$i9r/mif:xref/mif:secondaryRef[@refType='secondary-ac']">
        <xsl:with-param name="fid">id</xsl:with-param>
     </xsl:apply-templates>

     <!-- alias -->

      <xsl:apply-templates mode="alias"
          select="$i9r/mif:names/mif:shortLabel">
        <xsl:with-param name="fid">alias</xsl:with-param>
      </xsl:apply-templates>
 
      <xsl:apply-templates mode="alias"
          select="$i9r/mif:names/mif:fullName">
        <xsl:with-param name="fid">alias</xsl:with-param>
      </xsl:apply-templates>

      <xsl:apply-templates mode="alias"
          select="$i9r/mif:names/mif:alias">
        <xsl:with-param name="fid">alias</xsl:with-param>
      </xsl:apply-templates>
 
     <!-- identifiers -->

     <!-- taxid<n> -->

     <xsl:apply-templates mode="taxid" 
          select="$i9r/mif:organism">
        <xsl:with-param name="fid" select="concat('taxid',$fid)" />
     </xsl:apply-templates>
     
     <!-- species -->

     <xsl:apply-templates mode="species" 
         select="$i9r/mif:organism">
       <xsl:with-param name="fid">species</xsl:with-param>
     </xsl:apply-templates>

 </xsl:template>

<!-- ======================================================================= -->
<!-- field types/modes                                                       -->
<!-- ======================================================================= -->

 <xsl:template match="*" mode="id">
   <xsl:param name="fid"/>

   <xsl:element name="field">
     <xsl:attribute name="name"><xsl:value-of select="$fid"/></xsl:attribute>
     <xsl:value-of select=".//@id"/>
   </xsl:element>
 </xsl:template>

 <xsl:template match="*" mode="xref">
   <xsl:param name="fid"/>
   <xsl:element name="field">
     <xsl:attribute name="name"><xsl:value-of select="$fid"/></xsl:attribute>
     <xsl:choose>
       <xsl:when test=".//@dbAc = 'MI:0486'">
         <xsl:text>uniprotkb:</xsl:text><xsl:value-of select=".//@id"/>
       </xsl:when>
       <xsl:otherwise>
         <xsl:value-of select=".//@db"/>:<xsl:value-of select=".//@id"/>
      </xsl:otherwise>
    </xsl:choose>
   </xsl:element>
 </xsl:template>

 <xsl:template match="*" mode="alias">
   <xsl:param name="fid"/> 
   <xsl:element name="field">
      <xsl:attribute name="name"><xsl:value-of select="$fid"/></xsl:attribute>
      <xsl:value-of select="text()"/>      
   </xsl:element>
 </xsl:template>

 <xsl:template match="*" mode="pubid">
   <xsl:param name="fid"/>
   <xsl:element name="field">
     <xsl:attribute name="name"><xsl:value-of select="$fid"/></xsl:attribute>
     <xsl:value-of select=".//@db"/>:<xsl:value-of select=".//@id"/>
   </xsl:element>
 </xsl:template>

 <xsl:template match="*" mode="taxid">
   <xsl:param name="fid"/>
   <xsl:element name="field">
     <xsl:attribute name="name"><xsl:value-of select="$fid"/></xsl:attribute>
     <xsl:text>taxid:</xsl:text><xsl:value-of select="./@ncbiTaxId"/>
   </xsl:element>
 </xsl:template>

 <xsl:template match="*" mode="species">
   <xsl:param name="fid"/>
   <xsl:element name="field">
     <xsl:attribute name="name"><xsl:value-of select="$fid"/></xsl:attribute>
     <xsl:value-of select="./mif:names/mif:fullName"/>
   </xsl:element>
 </xsl:template>

 <xsl:template match="*" mode="cvterm">
   <xsl:param name="fid"/>
    <xsl:element name="field">
     <xsl:attribute name="name"><xsl:value-of select="$fid"/></xsl:attribute>
     <xsl:value-of select="./mif:xref/mif:primaryRef/@db"/>
     <xsl:text>:"</xsl:text>
     <xsl:value-of select="./mif:xref/mif:primaryRef/@id"/>
     <xsl:text>"(</xsl:text>
     <xsl:value-of select="./mif:names/mif:fullName"/>
     <xsl:text>)</xsl:text>
   </xsl:element>
 </xsl:template>

  <xsl:template match="*" mode="intid">
    <xsl:element name="field">
       <xsl:attribute name="name">interaction_id</xsl:attribute>
       <xsl:value-of select="@imexId"/>
    </xsl:element>
 </xsl:template>

</xsl:stylesheet>
