<!-- Original code by Walter Mourao -->

<ui:component
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:tr="http://myfaces.apache.org/trinidad"
    xmlns:trh="http://myfaces.apache.org/trinidad/html"
    xmlns:c="http://java.sun.com/jstl/core"
    xmlns:psm="http://psicquic.mi.psi.hupo.org/miscel">

    <c:set var="jsIdPrefix" value=""/>
    <c:if test="#{not empty parentId}">
        <c:set var="jsIdPrefix" value="#{parentId}:"/>
    </c:if>
    <c:set var="autocompleteSubformId" value="_#{id}_subformAutocomplete"/>
    <c:set var="editId" value="edit"/>
    <c:set var="jsEditId" value="#{jsIdPrefix}#{autocompleteSubformId}:#{editId}"/>
    <c:set var="jsActionId" value="#{jsIdPrefix}#{autocompleteSubformId}:action"/>
    <c:set var="jsTableId" value="#{jsIdPrefix}#{autocompleteSubformId}:table"/>
    <c:set var="jsHiddenId" value="#{jsIdPrefix}#{id}"/>
    <c:set var="timeoutVar" value="_#{parentId}_#{id}_timeout_"/>
    <c:set var="lineArrayVar" value="_#{parentId}_#{id}_lineArray_"/>
    <c:set var="selectedLineVar" value="_#{parentId}_#{id}_selectedLine_"/>
    <c:set var="orgValue" value="_#{parentId}_#{id}_orgValue_"/>
    <c:set var="orgEditValue" value="_#{parentId}_#{id}_orgEditValue_"/>
    <c:set var="showResultTableFunc" value="_#{parentId}_#{id}_showResultTableFunc"/>
    <c:set var="setValuesFromTableFunc" value="_#{parentId}_#{id}_setValuesFromTableFunc"/>
    <c:set var="hideResultTableFunc" value="_#{parentId}_#{id}_hideResultTableFunc"/>
    <c:set var="editKeydownFunc" value="_#{parentId}_#{id}_editKeydownFunc"/>
    <c:set var="pprMonitorFunc" value="_#{parentId}_#{id}_pprMonitorFunc"/>
    <c:set var="addPPRListenerFunc" value="_#{parentId}_#{id}_addPPRListenerFunc"/>
    <c:set var="checkEmptyEditFunc" value="_#{parentId}_#{id}_checkEmptyEditFunc"/>

    <tr:inputHidden id="#{id}" value="#{value}" />
    <f:subview id="#{autocompleteSubformId}">
        <trh:script>

            var #{timeoutVar}=null;
            var #{lineArrayVar}=null;
            var #{selectedLineVar}=null;
            var #{orgValue}='';
            var #{orgEditValue}='';
            function #{showResultTableFunc}(ignoreEdit){
                window.clearTimeout(#{timeoutVar});
                var edit=document.getElementById('#{jsEditId}');
                if(ignoreEdit || edit.value != ''){
                    #{selectedLineVar} = null;
                    #{lineArrayVar} = null;

                    var action=document.getElementById('#{jsActionId}')
                    action.click();
                } else {
                    #{hideResultTableFunc}();
                }
            }
            function #{pprMonitorFunc}(state)
            {
                var busy = state == TrRequestQueue.STATE_BUSY;
                if(busy){
                    document.getElementById('#{jsActionId}').className = 'autocomplete-button-action';
                } else {
                    document.getElementById('#{jsActionId}').className = 'autocomplete-button';
                    TrPage.getInstance().getRequestQueue().removeStateChangeListener(#{pprMonitorFunc});

                    var firstElement = document.getElementById('#{jsTableId}0');
                    if(firstElement){
                        var table = document.getElementById('#{jsTableId}');
                        var edit=document.getElementById('#{jsEditId}');

                        #{lineArrayVar} = table.getElementsByTagName('TD');
                        #{selectedLineVar} = 0;
                        firstElement.className='autocomplete-selected-line';

                        table.style.display="";
                        table.style.left = edit.style.left;
                        table.style.top = edit.style.top+edit.style.height;
                        table.style.width = edit.offsetWidth;

                        #{orgValue} = document.getElementById('#{jsHiddenId}').value;
                        #{orgEditValue} = edit.value;
                        edit.focus();
                    } else {
                        #{selectedLineVar} = null;
                        #{lineArrayVar} = null;
                    }
                }
            }
            function #{addPPRListenerFunc}()
            {
                var requestQueue = TrPage.getInstance().getRequestQueue();
                requestQueue.addStateChangeListener(#{pprMonitorFunc});
            }
            function #{setValuesFromTableFunc}(hiddenValue, editValue){
                document.getElementById('#{jsEditId}').value=hiddenValue;             //the order matters
                document.getElementById('#{jsHiddenId}').value=hiddenValue;
                #{hideResultTableFunc}();
            }
            function #{hideResultTableFunc}(){
                window.clearTimeout(#{timeoutVar});
                #{timeoutVar}=null;
                document.getElementById('#{jsTableId}').style.display='none';
                #{selectedLineVar}=null;
                #{lineArrayVar}=null;
            }
            function #{checkEmptyEditFunc}(){
                var edit=document.getElementById('#{jsEditId}');
                var hidden=document.getElementById('#{jsHiddenId}');
                if(hidden.value == ''){
                    edit.value = '';
                } else {
                    edit.value = edit.value.replace(/^\s\s*/, '').replace(/\s\s*$/, ''); //trim
                    if(edit.value == ''){
                        hidden.value = '';
                    }
                }
            }
            function #{editKeydownFunc}(event) {
                window.clearTimeout(#{timeoutVar});

                var _keyCode = event.keyCode ? event.keyCode : event.which ? event.which : event.charCode;

                if(#{selectedLineVar} == null){
                    if(_keyCode==40) { //down arrow
                        #{showResultTableFunc}(true);
                    } else {
                        #{timeoutVar}=window.setTimeout('#{showResultTableFunc}(false);',900);
                    }
                } else {
                    if(_keyCode==38){//up arrow
                        if(#{selectedLineVar} > 0){
                            document.getElementById('#{jsTableId}'+#{selectedLineVar}).className='autocomplete-line';
                            --#{selectedLineVar};
                            document.getElementById('#{jsTableId}'+#{selectedLineVar}).className='autocomplete-selected-line';
                        }
                    }else if(_keyCode==40){//down arrow
                        if((#{lineArrayVar}.length - 1) > #{selectedLineVar}){
                            if(#{selectedLineVar} > -1)
                                document.getElementById('#{jsTableId}'+#{selectedLineVar}).className='autocomplete-line';
                            ++#{selectedLineVar};
                            document.getElementById('#{jsTableId}'+#{selectedLineVar}).className='autocomplete-selected-line';
                        }
                    }else if(_keyCode==27){ //esc
                        #{setValuesFromTableFunc}(#{orgValue}, #{orgEditValue});
                        return false;
                    }else if(_keyCode==13){ //enter
                        document.getElementById('#{jsTableId}'+#{selectedLineVar}).onclick();
                        return false;
                    }else if(_keyCode==9){ //tab
                        document.getElementById('#{jsTableId}'+#{selectedLineVar}).onclick();
                    } else {
                        #{timeoutVar}=window.setTimeout('#{showResultTableFunc}(false);',900);
                    }
                }
                return true;
            }

        </trh:script>

        <tr:inputText id="#{editId}" autoComplete="off"
                      inlineStyle="#{contentStyle}"
                     columns="#{columns}"
                    readOnly="#{readOnly}"
                    onkeydown="return #{editKeydownFunc}(event);"
                    onfocus="this.select();"
                    onblur="window.clearTimeout(#{timeoutVar}); #{checkEmptyEditFunc}(); #{timeoutVar}=window.setTimeout('#{hideResultTableFunc}();',100);"
                    value="#{value}"/>

        <tr:commandButton id="action" inlineStyle="display: none;"
                                 actionListener="#{locateBackingBean[locateActionListenerName]}"
                                 partialSubmit="true" text="" immediate="true"
                                 onclick="#{addPPRListenerFunc}(); return true;">
            <f:param name="searchFieldRequestParamName" value="#{jsEditId}"/>
        </tr:commandButton>

        <tr:table inlineStyle="position:absolute; z-index:100; #{empty autocompleteResult ? 'display:none': ''}"
            id="table" var="row" value="#{autocompleteResult}" rows="#{maxSuggestions == null? 20 : maxSuggestions}" width="100%" partialTriggers="action" varStatus="status">
            <tr:column>
                <div id="#{jsTableId}#{status.index}" class="autocomplete-line" onmouseover="this.className='autocomplete-selected-line';"
                    onmouseout="this.className = 'autocomplete-line';" onclick="#{setValuesFromTableFunc}('#{row[locateValueFieldName]}','#{row[locateVisibleFieldName]}'); return false; " >

                    <c:set var="#{var}" value="#{row}"/>

                    <ui:insert>
                        <h:outputText value="#{row[locateVisibleFieldName]}" rendered="#{not empty locateVisibleFieldName}"/>
                        <h:outputText value="#{row[locateValueFieldName]}" rendered="#{empty locateVisibleFieldName}"/>
                     </ui:insert>

                </div>
            </tr:column>
        </tr:table>
    </f:subview>

</ui:component>
