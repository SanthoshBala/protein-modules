<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:tr="http://myfaces.apache.org/trinidad"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:trh="http://myfaces.apache.org/trinidad/html" xmlns:h="http://java.sun.com/jsf/html"
                xsi:schemaLocation="http://psicquic.mi.psi.hupo.org/miscel /WEB-INF/psicquic-miscel.tld">

<!-- TODO enhance the handling of the graph div size on screen resize -->
<!-- TODO Add on node click, a panel shows the details of a node, edge -->
<!-- TODO On right click on a node, allow to expand the network by updating the MIQL query (Q OR node.id) -->
<!-- TODO Add a way to run a text search by molecule name that highlights nodes -->
<!-- TODO Add a way to color highlight publications, detection methods, species -->
<!-- TODO Add a way to filter by confidence score with slider -->
<!-- TODO Add a way to filter nodes by count of neighbour -->
<!-- TODO Add a way to visualize graphicaly score or count of evidences -->
<!-- TODO Add a way to represent spoke expanded interactions (better wait MITAB 2.6) -->
<!-- TODO Need a URL to open the application on the graph tab, arams: serviceName, tab[graph/table]-->

<tr:document>

<tr:panelHeader text="Cytoscape Graph">

<trh:script source="/cytoscapeweb_v1.0.2/js/min/AC_OETags.min.js"/>
<trh:script source="/cytoscapeweb_v1.0.2/js/min/json2.min.js"/>
<trh:script source="/cytoscapeweb_v1.0.2/js/min/cytoscapeweb.min.js"/>

<script type="text/javascript">

    // init and draw
    var options = {
        swfPath:"#{facesContext.externalContext.requestContextPath}/cytoscapeweb_v1.0.2/swf/CytoscapeWeb",
        flashInstallerPath:"#{facesContext.externalContext.requestContextPath}/cytoscapeweb_v1.0.2/swf/playerProductInstall"
    };

    var vis = new org.cytoscapeweb.Visualization("cytoscapeweb", options);

    function drawGraph(xml) {

        // whether the edges should be merged or not
        var merged = true;


        // callback when Cytoscape Web has finished drawing
        vis.ready(function () {

            vis.edgesMerged(merged);

            vis.addContextMenuItem("Select first neighbours", "nodes",
                    function (evt) {
                        // Get the right-clicked node:
                        var rootNode = evt.target;

                        // Get the first neighbors of that node:
                        var fNeighbors = vis.firstNeighbors([rootNode]);
                        var neighborNodes = fNeighbors.neighbors;

                        // Select the root node and its neighbors:
                        vis.select([rootNode]).select(neighborNodes);
                    }
            );

            // TODO in the node right click, link out to the service database using that molecule id
            // TODO edge > right click, link out to the service database using that interaction AC.

            //            vis.addContextMenuItem("Link out to source web site", "nodes",
            //                                  function (evt) {
            //                                      // Get the right-clicked node:
            //                                      var target = evt.target;
            //
            //                                      var identifier = target.data[ 'identifier' ];
            //
            //                                      // get url template
            //                                      var url='http://www.google.com/q=${ac}}';
            //
            //                                      // open URL for that molecule
            //                                      window.open(url.replace('${ac}}',identifier),'_blank',null);
            //                                  }
            //                    );

            vis.addContextMenuItem("Expand network around this molecule", "nodes",
                    function (evt) {
                        // Get the right-clicked node:
                        var target = evt.target;

                        var crossRef = target.data['identifier'].split('#');
                        var identifier = crossRef[1];

                        // update the search field
                        var searchQuery = document.getElementById('queryTxt').value;
                        var newQuery = '(' + searchQuery + ') OR id:' + identifier;
                        document.getElementById('queryTxt').value = newQuery;

                        // submit search
                        document.mainForm.quickSearchBtn.click();
                    }
            );
        });
        // add a listener for when nodes and edges are clicked
        vis.addListener("click", "nodes", function (event) {
            handle_node_click(event);
        });

        vis.addListener("click", "edges", function (event) {
            handle_edge_click(event);
        });

        function handle_edge_click(event) {
            var edge = event.target;

            clear();
            var x;
//            var txt = "";
//            var names = edge.data;
//
//            for (x in names){
//                txt += txt + x + names[x] + '\n';
//            }
//
//            document.getElementById("edge").innerHTML = txt;
//            document.getElementById("edgeDiv").style.visibility = "visible";
            // print stuff here (eg. method, type, pmid, author, confidence value...).
        }

        function handle_node_click(event) {
            var node = event.target;

            clear();
            var x;
            var txt = "";

            if (node.data.hasOwnProperty('type')) {
                if (node.data['type'] != null)
                    txt += 'Molecule Type'.bold() + ': ' + node.data['type'] + '\n';
            }

            if (node.data.hasOwnProperty('label')) {
                if (node.data['label'] != null)
                    txt += 'Interactor'.bold() + ': ' + node.data['label'] + '\n';
            }

            if (node.data.hasOwnProperty('specie')) {
                if (node.data['specie'] != null)
                    txt += 'Species'.bold() + ': ' + node.data['specie'] + '\n';
            }

            if (node.data.hasOwnProperty('identifier')) {
                if (node.data['identifier'] != null) {
                    var crossRef = node.data['identifier'].split('#');
                    var link = null;
                    var db = crossRef[0];
                    if (db == 'uniprotkb') {
                        link = 'http://www.uniprot.org/uniprot/' + crossRef[1];
                    } else if (db == 'chebi') {
                        link = 'http://www.ebi.ac.uk/chebi/searchId.do?chebiId=' + crossRef[1];
                    }

                    var identifierTxt = 'Identifier'.bold() + ': ';

                    if (link != null) {
                        identifierTxt += crossRef[1].link(link) + '\n';
                    } else {
                        identifierTxt += crossRef[1] + ' (' + crossRef[0] + ')' + '\n';
                    }
                    txt += identifierTxt;
                }
            }

            document.getElementById("node").innerHTML = txt;
            document.getElementById("nodeDiv").style.visibility = "visible";
        }


        function clear() {
            document.getElementById("node").innerHTML = "";
        }

        function print(msg) {
            document.getElementById("node").innerHTML += msg;
        }

        // Enables the shapes present in the GraphML input to be displayed in the Flash panel.
        var style = {
            nodes:{
                shape:{ passthroughMapper:{ attrName:"shape" } }
            }
        };

        var draw_options = {
            // set visual style
            visualStyle:style,
            // your data goes here
            network:xml
        };

        vis.draw(draw_options);

    }

</script>

<div id="rightPanel" style="float:right; width:19%;">
    <div id="graphController">
        <tr:panelBox text="CytoscapeWeb Controls" inlineStyle="width:98%;">

            <tr:panelHorizontalLayout>
                <tr:outputText value="Layouts:"/>&#160;
                <tr:goLink destination="#" onclick="selectForceDirectedLayout();"><tr:outputText
                        id="forceDirectedLayout" value="force directed"
                        inlineStyle="font-weight:bold"/></tr:goLink>
                &#160;|&#160;
                <tr:goLink destination="#" onclick="selectRadialLayout();"><tr:outputText id="radialLayout"
                                                                                          value="radial"
                                                                                          inlineStyle="font-weight:normal"/></tr:goLink>
                &#160;|&#160;
                <tr:goLink destination="#" onclick="selectCircleLayout();"><tr:outputText id="circleLayout"
                                                                                          value="circle"
                                                                                          inlineStyle="font-weight:normal"/></tr:goLink>
            </tr:panelHorizontalLayout>

            <tr:panelHorizontalLayout>
                <tr:outputText value="Merge edges:"/>&#160;
                <tr:goLink destination="#" onclick="selectMerged();"><tr:outputText id="mergeOn" value="on"
                                                                                    inlineStyle="font-weight:bold"/></tr:goLink>
                &#160;|&#160;
                <tr:goLink destination="#" onclick="unselectMerged();"><tr:outputText id="mergeOff" value="off"
                                                                                      inlineStyle="font-weight:normal"/></tr:goLink>
            </tr:panelHorizontalLayout>

            <!--<tr:panelHorizontalLayout>-->
            <!--<tr:outputText value="Highlight:" />&#160;-->
            <!--<tr:goLink destination="#" onclick="highlightSpecies( vis );"><tr:outputText id="species" value="species" inlineStyle="font-weight:normal"/></tr:goLink>-->
            <!--</tr:panelHorizontalLayout>-->

            <!--<tr:panelHorizontalLayout>-->
            <!--<tr:outputText value="Download:" />&#160;-->
            <!--<tr:goLink destination="#" onclick="vis.exportNetwork('xgmml', 'export.php?type=xml');"><tr:outputText id="xgmll" value="xgmll" inlineStyle="font-weight:normal"/></tr:goLink>-->
            <!--&#160;|&#160;-->
            <!--<tr:goLink destination="#" onclick="vis.exportNetwork('graphml', 'export.php?type=graphml');"><tr:outputText id="graphml" value="graphml" inlineStyle="font-weight:normal"/></tr:goLink>-->
            <!--&#160;|&#160;-->
            <!--<tr:goLink destination="#" onclick="vis.exportNetwork('sif', 'export.php?type=sif');"><tr:outputText id="sif" value="sif" inlineStyle="font-weight:normal"/></tr:goLink>-->
            <!--&#160;|&#160;-->
            <!--</tr:panelHorizontalLayout>-->

        </tr:panelBox>
    </div>

    <div id="nodeDiv" style="visibility:hidden;">
        <tr:panelBox id="nodePanel" text="Interactor Info" inlineStyle="width:98%;">
            <tr:panelHorizontalLayout>
                <tr:outputText id="node" inlineStyle="display: block; white-space:pre-line">

                </tr:outputText>
            </tr:panelHorizontalLayout>
        </tr:panelBox>
    </div>

    <div id="edgeDiv" style="visibility:hidden;">
        <tr:panelBox id="edgePanel" text="Interaction Info" inlineStyle="width:98%;">
            <tr:panelHorizontalLayout>
                <tr:outputText id="edge" inlineStyle="display: block; white-space:pre-line">

                </tr:outputText>
            </tr:panelHorizontalLayout>
        </tr:panelBox>
    </div>

</div>

<div id="cytoscapeweb" style="width:80%; height:500px; border:1px solid #d3d3d3;overflow:auto;">
    Interaction Graph should show here in a few moment...<h:graphicImage alt="loading..."
                                                                         url="/images/wait_red_indicator.gif"
                                                                         style="vertical-align: baseline;"/>
    <script type="text/javascript">
        //                $.call(graphLoad());
        var xmlUrl = '#{facesContext.externalContext.requestContextPath}/graphmlDownload?mitabUrl=#{searchBean.mitabUrl}';
        // wait for the data to be loaded prior, handy for larger network.

        jQuery.ajax({
            url:xmlUrl,
            success:function (gotXml) {
                xml = gotXml;
                drawGraph(xml);
            },
            error:function () {
                var element = document.getElementById("cytoscapeweb");
                $(element).empty();
                $(element).append("An error occurred while loading the data.");
            }});

    </script>
</div>

</tr:panelHeader>
</tr:document>
</ui:composition>
